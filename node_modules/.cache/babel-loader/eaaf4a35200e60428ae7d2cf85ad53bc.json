{"ast":null,"code":"import _classCallCheck from \"/Users/liaoguochen/Desktop/Career/JAVA/SpaceX/starlink/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liaoguochen/Desktop/Career/JAVA/SpaceX/starlink/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/liaoguochen/Desktop/Career/JAVA/SpaceX/starlink/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liaoguochen/Desktop/Career/JAVA/SpaceX/starlink/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/liaoguochen/Desktop/Career/JAVA/SpaceX/starlink/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liaoguochen/Desktop/Career/JAVA/SpaceX/starlink/src/components/WorldMap.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Spin } from \"antd\";\nimport { feature } from \"topojson-client\";\nimport { geoKavrayskiy7 } from \"d3-geo-projection\";\nimport { geoGraticule, geoPath } from \"d3-geo\";\nimport { select as d3Select } from \"d3-selection\";\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\nimport * as d3Scale from \"d3-scale\";\nimport { timeFormat as d3TimeFormat } from \"d3-time-format\";\nimport { WORLD_MAP_URL, SATELLITE_POSITION_URL, SAT_API_KEY } from \"../constants\";\nvar width = 960;\nvar height = 600;\n\nvar WorldMap = /*#__PURE__*/function (_Component) {\n  _inherits(WorldMap, _Component);\n\n  function WorldMap() {\n    var _this;\n\n    _classCallCheck(this, WorldMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorldMap).call(this));\n\n    _this.track = function (data) {\n      if (!data[0].hasOwnProperty(\"positions\")) {\n        throw new Error(\"no position data\");\n        return;\n      }\n\n      var len = data[0].positions.length;\n      var duration = _this.props.observerData.duration;\n      var context2 = _this.map.context2;\n      var now = new Date();\n      var i = 0;\n      var timer = setInterval(function () {\n        var ct = new Date();\n        var timePassed = i === 0 ? 0 : ct - now;\n        var time = new Date(now.getTime() + 100 * timePassed);\n        context2.clearRect(0, 0, width, height);\n        context2.font = \"bold 14px sans-serif\";\n        context2.fillStyle = \"#333\";\n        context2.textAlign = \"center\";\n        context2.fillText(d3TimeFormat(time), width / 2, 10);\n\n        if (i >= len) {\n          clearInterval(timer);\n\n          _this.setState({\n            isDrawing: false\n          });\n\n          var oHint = document.getElementsByClassName(\"hint\")[0];\n          oHint.innerHTML = \"\";\n          return;\n        }\n\n        data.forEach(function (sat) {\n          var info = sat.info,\n              positions = sat.positions;\n\n          _this.drawSat(info, positions[i]);\n        });\n        i += 10;\n      }, 100);\n    };\n\n    _this.drawSat = function (sat, pos) {\n      var satlongitude = pos.satlongitude,\n          satlatitude = pos.satlatitude;\n      if (!satlongitude || !satlatitude) return;\n      var satname = sat.satname;\n      var nameWithNumber = satname.match(/\\d+/g).join(\"\");\n      var _this$map = _this.map,\n          projection = _this$map.projection,\n          context2 = _this$map.context2;\n      var xy = projection([satlongitude, satlatitude]);\n      context2.fillStyle = _this.color(nameWithNumber);\n      context2.beginPath();\n      context2.arc(xy[0], xy[1], 4, 0, 2 * Math.PI);\n      context2.fill();\n      context2.font = \"bold 11px sans-serif\";\n      context2.textAlign = \"center\";\n      context2.fillText(nameWithNumber, xy[0], xy[1] + 14);\n    };\n\n    _this.generateMap = function (land) {\n      var projection = geoKavrayskiy7().scale(170).translate([width / 2, height / 2]).precision(0.1);\n      var graticule = geoGraticule();\n      var canvas = d3Select(_this.refMap.current).attr(\"width\", width).attr(\"height\", height);\n      var canvas2 = d3Select(_this.refTrack.current).attr(\"width\", width).attr(\"height\", height);\n      var context = canvas.node().getContext(\"2d\");\n      var context2 = canvas2.node().getContext(\"2d\");\n      var path = geoPath().projection(projection).context(context);\n      land.forEach(function (ele) {\n        context.fillStyle = \"#B3DDEF\";\n        context.strokeStyle = \"#000\";\n        context.globalAlpha = 0.7;\n        context.beginPath();\n        path(ele);\n        context.fill();\n        context.stroke();\n        context.strokeStyle = \"rgba(220, 220, 220, 0.1)\";\n        context.beginPath();\n        path(graticule());\n        context.lineWidth = 0.1;\n        context.stroke();\n        context.beginPath();\n        context.lineWidth = 0.5;\n        path(graticule.outline());\n        context.stroke();\n      });\n      _this.map = {\n        projection: projection,\n        graticule: graticule,\n        context: context,\n        context2: context2\n      };\n    };\n\n    _this.state = {\n      isLoading: false,\n      isDrawing: false\n    };\n    _this.map = null;\n    _this.color = d3Scale.scaleOrdinal(schemeCategory10);\n    _this.refMap = React.createRef();\n    _this.refTrack = React.createRef();\n    return _this;\n  }\n\n  _createClass(WorldMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(WORLD_MAP_URL).then(function (res) {\n        var data = res.data;\n        var land = feature(data, data.objects.countries).features;\n\n        _this2.generateMap(land);\n      }).catch(function (e) {\n        console.log(\"err in fetch map data \", e.message);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this3 = this;\n\n      if (prevProps.satData !== this.props.satData) {\n        var _this$props$observerD = this.props.observerData,\n            latitude = _this$props$observerD.latitude,\n            longitude = _this$props$observerD.longitude,\n            elevation = _this$props$observerD.elevation,\n            altitude = _this$props$observerD.altitude,\n            duration = _this$props$observerD.duration;\n        var endTime = duration * 60;\n        this.setState({\n          isLoading: true\n        });\n        var urls = this.props.satData.map(function (sat) {\n          var satid = sat.satid;\n          var url = \"/api/\".concat(SATELLITE_POSITION_URL, \"/\").concat(satid, \"/\").concat(latitude, \"/\").concat(longitude, \"/\").concat(elevation, \"/\").concat(endTime, \"/&apiKey=\").concat(SAT_API_KEY);\n          return axios.get(url);\n        });\n        Promise.all(urls).then(function (res) {\n          var arr = res.map(function (sat) {\n            return sat.data;\n          });\n\n          _this3.setState({\n            isLoading: false,\n            isDrawing: true\n          });\n\n          if (!prevState.isDrawing) {\n            _this3.track(arr);\n          } else {\n            var oHint = document.getElementsByClassName(\"hint\")[0];\n            oHint.innerHTML = \"Please wait for these satellite animation to finish before selection new ones!\";\n          }\n        }).catch(function (e) {\n          console.log(\"err in fetch satellite position -> \", e.message);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.state.isLoading;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"map-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        tip: \"Loading...\",\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      })) : null, /*#__PURE__*/React.createElement(\"canvas\", {\n        className: \"map\",\n        ref: this.refMap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"canvas\", {\n        className: \"track\",\n        ref: this.refTrack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return WorldMap;\n}(Component);\n\nexport default WorldMap;","map":{"version":3,"names":["React","Component","axios","Spin","feature","geoKavrayskiy7","geoGraticule","geoPath","select","d3Select","schemeCategory10","d3Scale","timeFormat","d3TimeFormat","WORLD_MAP_URL","SATELLITE_POSITION_URL","SAT_API_KEY","width","height","WorldMap","track","data","hasOwnProperty","Error","len","positions","length","duration","props","observerData","context2","map","now","Date","i","timer","setInterval","ct","timePassed","time","getTime","clearRect","font","fillStyle","textAlign","fillText","clearInterval","setState","isDrawing","oHint","document","getElementsByClassName","innerHTML","forEach","sat","info","drawSat","pos","satlongitude","satlatitude","satname","nameWithNumber","match","join","projection","xy","color","beginPath","arc","Math","PI","fill","generateMap","land","scale","translate","precision","graticule","canvas","refMap","current","attr","canvas2","refTrack","context","node","getContext","path","ele","strokeStyle","globalAlpha","stroke","lineWidth","outline","state","isLoading","scaleOrdinal","createRef","get","then","res","objects","countries","features","catch","e","console","log","message","prevProps","prevState","snapshot","satData","latitude","longitude","elevation","altitude","endTime","urls","satid","url","Promise","all","arr"],"sources":["/Users/liaoguochen/Desktop/Career/JAVA/SpaceX/starlink/src/components/WorldMap.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Spin } from \"antd\";\nimport { feature } from \"topojson-client\";\nimport { geoKavrayskiy7 } from \"d3-geo-projection\";\nimport { geoGraticule, geoPath } from \"d3-geo\";\nimport { select as d3Select } from \"d3-selection\";\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\nimport * as d3Scale from \"d3-scale\";\nimport { timeFormat as d3TimeFormat } from \"d3-time-format\";\n\nimport {\n  WORLD_MAP_URL,\n  SATELLITE_POSITION_URL,\n  SAT_API_KEY\n} from \"../constants\";\n\nconst width = 960;\nconst height = 600;\n\nclass WorldMap extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      isDrawing: false\n    };\n    this.map = null;\n    this.color = d3Scale.scaleOrdinal(schemeCategory10);\n    this.refMap = React.createRef();\n    this.refTrack = React.createRef();\n  }\n\n  componentDidMount() {\n    axios\n      .get(WORLD_MAP_URL)\n      .then(res => {\n        const { data } = res;\n        const land = feature(data, data.objects.countries).features;\n        this.generateMap(land);\n      })\n      .catch(e => {\n        console.log(\"err in fetch map data \", e.message);\n      });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.satData !== this.props.satData) {\n      const {\n        latitude,\n        longitude,\n        elevation,\n        altitude,\n        duration\n      } = this.props.observerData;\n      const endTime = duration * 60;\n\n      this.setState({\n        isLoading: true\n      });\n\n      const urls = this.props.satData.map(sat => {\n        const { satid } = sat;\n        const url = `/api/${SATELLITE_POSITION_URL}/${satid}/${latitude}/${longitude}/${elevation}/${endTime}/&apiKey=${SAT_API_KEY}`;\n\n        return axios.get(url);\n      });\n\n      Promise.all(urls)\n        .then(res => {\n          const arr = res.map(sat => sat.data);\n          this.setState({\n            isLoading: false,\n            isDrawing: true\n          });\n\n          if (!prevState.isDrawing) {\n            this.track(arr);\n          } else {\n            const oHint = document.getElementsByClassName(\"hint\")[0];\n            oHint.innerHTML =\n              \"Please wait for these satellite animation to finish before selection new ones!\";\n          }\n        })\n        .catch(e => {\n          console.log(\"err in fetch satellite position -> \", e.message);\n        });\n    }\n  }\n\n  track = data => {\n    if (!data[0].hasOwnProperty(\"positions\")) {\n      throw new Error(\"no position data\");\n      return;\n    }\n\n    const len = data[0].positions.length;\n    const { duration } = this.props.observerData;\n    const { context2 } = this.map;\n\n    let now = new Date();\n\n    let i = 0;\n\n    let timer = setInterval(() => {\n      let ct = new Date();\n\n      let timePassed = i === 0 ? 0 : ct - now;\n      let time = new Date(now.getTime() + 100 * timePassed);\n\n      context2.clearRect(0, 0, width, height);\n\n      context2.font = \"bold 14px sans-serif\";\n      context2.fillStyle = \"#333\";\n      context2.textAlign = \"center\";\n      context2.fillText(d3TimeFormat(time), width / 2, 10);\n\n      if (i >= len) {\n        clearInterval(timer);\n        this.setState({ isDrawing: false });\n        const oHint = document.getElementsByClassName(\"hint\")[0];\n        oHint.innerHTML = \"\";\n        return;\n      }\n\n      data.forEach(sat => {\n        const { info, positions } = sat;\n        this.drawSat(info, positions[i]);\n      });\n\n      i += 10;\n    }, 100);\n  };\n\n  drawSat = (sat, pos) => {\n    const { satlongitude, satlatitude } = pos;\n\n    if (!satlongitude || !satlatitude) return;\n\n    const { satname } = sat;\n    const nameWithNumber = satname.match(/\\d+/g).join(\"\");\n\n    const { projection, context2 } = this.map;\n    const xy = projection([satlongitude, satlatitude]);\n\n    context2.fillStyle = this.color(nameWithNumber);\n    context2.beginPath();\n    context2.arc(xy[0], xy[1], 4, 0, 2 * Math.PI);\n    context2.fill();\n\n    context2.font = \"bold 11px sans-serif\";\n    context2.textAlign = \"center\";\n    context2.fillText(nameWithNumber, xy[0], xy[1] + 14);\n  };\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <div className=\"map-box\">\n        {isLoading ? (\n          <div className=\"spinner\">\n            <Spin tip=\"Loading...\" size=\"large\" />\n          </div>\n        ) : null}\n        <canvas className=\"map\" ref={this.refMap} />\n        <canvas className=\"track\" ref={this.refTrack} />\n        <div className=\"hint\" />\n      </div>\n    );\n  }\n\n  generateMap = land => {\n    const projection = geoKavrayskiy7()\n      .scale(170)\n      .translate([width / 2, height / 2])\n      .precision(0.1);\n\n    const graticule = geoGraticule();\n\n    const canvas = d3Select(this.refMap.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    const canvas2 = d3Select(this.refTrack.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    const context = canvas.node().getContext(\"2d\");\n    const context2 = canvas2.node().getContext(\"2d\");\n\n    let path = geoPath()\n      .projection(projection)\n      .context(context);\n\n    land.forEach(ele => {\n      context.fillStyle = \"#B3DDEF\";\n      context.strokeStyle = \"#000\";\n      context.globalAlpha = 0.7;\n      context.beginPath();\n      path(ele);\n      context.fill();\n      context.stroke();\n\n      context.strokeStyle = \"rgba(220, 220, 220, 0.1)\";\n      context.beginPath();\n      path(graticule());\n      context.lineWidth = 0.1;\n      context.stroke();\n\n      context.beginPath();\n      context.lineWidth = 0.5;\n      path(graticule.outline());\n      context.stroke();\n    });\n\n    this.map = {\n      projection: projection,\n      graticule: graticule,\n      context: context,\n      context2: context2\n    };\n  };\n}\n\nexport default WorldMap;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,QAAtC;AACA,SAASC,MAAM,IAAIC,QAAnB,QAAmC,cAAnC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,gBAA3C;AAEA,SACEC,aADF,EAEEC,sBAFF,EAGEC,WAHF,QAIO,cAJP;AAMA,IAAMC,KAAK,GAAG,GAAd;AACA,IAAMC,MAAM,GAAG,GAAf;;IAEMC,Q;;;EACJ,oBAAc;IAAA;;IAAA;;IACZ;;IADY,MAqEdC,KArEc,GAqEN,UAAAC,IAAI,EAAI;MACd,IAAI,CAACA,IAAI,CAAC,CAAD,CAAJ,CAAQC,cAAR,CAAuB,WAAvB,CAAL,EAA0C;QACxC,MAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;QACA;MACD;;MAED,IAAMC,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQI,SAAR,CAAkBC,MAA9B;MANc,IAONC,QAPM,GAOO,MAAKC,KAAL,CAAWC,YAPlB,CAONF,QAPM;MAAA,IAQNG,QARM,GAQO,MAAKC,GARZ,CAQND,QARM;MAUd,IAAIE,GAAG,GAAG,IAAIC,IAAJ,EAAV;MAEA,IAAIC,CAAC,GAAG,CAAR;MAEA,IAAIC,KAAK,GAAGC,WAAW,CAAC,YAAM;QAC5B,IAAIC,EAAE,GAAG,IAAIJ,IAAJ,EAAT;QAEA,IAAIK,UAAU,GAAGJ,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcG,EAAE,GAAGL,GAApC;QACA,IAAIO,IAAI,GAAG,IAAIN,IAAJ,CAASD,GAAG,CAACQ,OAAJ,KAAgB,MAAMF,UAA/B,CAAX;QAEAR,QAAQ,CAACW,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBxB,KAAzB,EAAgCC,MAAhC;QAEAY,QAAQ,CAACY,IAAT,GAAgB,sBAAhB;QACAZ,QAAQ,CAACa,SAAT,GAAqB,MAArB;QACAb,QAAQ,CAACc,SAAT,GAAqB,QAArB;QACAd,QAAQ,CAACe,QAAT,CAAkBhC,YAAY,CAAC0B,IAAD,CAA9B,EAAsCtB,KAAK,GAAG,CAA9C,EAAiD,EAAjD;;QAEA,IAAIiB,CAAC,IAAIV,GAAT,EAAc;UACZsB,aAAa,CAACX,KAAD,CAAb;;UACA,MAAKY,QAAL,CAAc;YAAEC,SAAS,EAAE;UAAb,CAAd;;UACA,IAAMC,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,MAAhC,EAAwC,CAAxC,CAAd;UACAF,KAAK,CAACG,SAAN,GAAkB,EAAlB;UACA;QACD;;QAED/B,IAAI,CAACgC,OAAL,CAAa,UAAAC,GAAG,EAAI;UAAA,IACVC,IADU,GACUD,GADV,CACVC,IADU;UAAA,IACJ9B,SADI,GACU6B,GADV,CACJ7B,SADI;;UAElB,MAAK+B,OAAL,CAAaD,IAAb,EAAmB9B,SAAS,CAACS,CAAD,CAA5B;QACD,CAHD;QAKAA,CAAC,IAAI,EAAL;MACD,CA3BsB,EA2BpB,GA3BoB,CAAvB;IA4BD,CA/Ga;;IAAA,MAiHdsB,OAjHc,GAiHJ,UAACF,GAAD,EAAMG,GAAN,EAAc;MAAA,IACdC,YADc,GACgBD,GADhB,CACdC,YADc;MAAA,IACAC,WADA,GACgBF,GADhB,CACAE,WADA;MAGtB,IAAI,CAACD,YAAD,IAAiB,CAACC,WAAtB,EAAmC;MAHb,IAKdC,OALc,GAKFN,GALE,CAKdM,OALc;MAMtB,IAAMC,cAAc,GAAGD,OAAO,CAACE,KAAR,CAAc,MAAd,EAAsBC,IAAtB,CAA2B,EAA3B,CAAvB;MANsB,gBAQW,MAAKhC,GARhB;MAAA,IAQdiC,UARc,aAQdA,UARc;MAAA,IAQFlC,QARE,aAQFA,QARE;MAStB,IAAMmC,EAAE,GAAGD,UAAU,CAAC,CAACN,YAAD,EAAeC,WAAf,CAAD,CAArB;MAEA7B,QAAQ,CAACa,SAAT,GAAqB,MAAKuB,KAAL,CAAWL,cAAX,CAArB;MACA/B,QAAQ,CAACqC,SAAT;MACArC,QAAQ,CAACsC,GAAT,CAAaH,EAAE,CAAC,CAAD,CAAf,EAAoBA,EAAE,CAAC,CAAD,CAAtB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,IAAII,IAAI,CAACC,EAA1C;MACAxC,QAAQ,CAACyC,IAAT;MAEAzC,QAAQ,CAACY,IAAT,GAAgB,sBAAhB;MACAZ,QAAQ,CAACc,SAAT,GAAqB,QAArB;MACAd,QAAQ,CAACe,QAAT,CAAkBgB,cAAlB,EAAkCI,EAAE,CAAC,CAAD,CAApC,EAAyCA,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAjD;IACD,CApIa;;IAAA,MAsJdO,WAtJc,GAsJA,UAAAC,IAAI,EAAI;MACpB,IAAMT,UAAU,GAAG3D,cAAc,GAC9BqE,KADgB,CACV,GADU,EAEhBC,SAFgB,CAEN,CAAC1D,KAAK,GAAG,CAAT,EAAYC,MAAM,GAAG,CAArB,CAFM,EAGhB0D,SAHgB,CAGN,GAHM,CAAnB;MAKA,IAAMC,SAAS,GAAGvE,YAAY,EAA9B;MAEA,IAAMwE,MAAM,GAAGrE,QAAQ,CAAC,MAAKsE,MAAL,CAAYC,OAAb,CAAR,CACZC,IADY,CACP,OADO,EACEhE,KADF,EAEZgE,IAFY,CAEP,QAFO,EAEG/D,MAFH,CAAf;MAIA,IAAMgE,OAAO,GAAGzE,QAAQ,CAAC,MAAK0E,QAAL,CAAcH,OAAf,CAAR,CACbC,IADa,CACR,OADQ,EACChE,KADD,EAEbgE,IAFa,CAER,QAFQ,EAEE/D,MAFF,CAAhB;MAIA,IAAMkE,OAAO,GAAGN,MAAM,CAACO,IAAP,GAAcC,UAAd,CAAyB,IAAzB,CAAhB;MACA,IAAMxD,QAAQ,GAAGoD,OAAO,CAACG,IAAR,GAAeC,UAAf,CAA0B,IAA1B,CAAjB;MAEA,IAAIC,IAAI,GAAGhF,OAAO,GACfyD,UADQ,CACGA,UADH,EAERoB,OAFQ,CAEAA,OAFA,CAAX;MAIAX,IAAI,CAACpB,OAAL,CAAa,UAAAmC,GAAG,EAAI;QAClBJ,OAAO,CAACzC,SAAR,GAAoB,SAApB;QACAyC,OAAO,CAACK,WAAR,GAAsB,MAAtB;QACAL,OAAO,CAACM,WAAR,GAAsB,GAAtB;QACAN,OAAO,CAACjB,SAAR;QACAoB,IAAI,CAACC,GAAD,CAAJ;QACAJ,OAAO,CAACb,IAAR;QACAa,OAAO,CAACO,MAAR;QAEAP,OAAO,CAACK,WAAR,GAAsB,0BAAtB;QACAL,OAAO,CAACjB,SAAR;QACAoB,IAAI,CAACV,SAAS,EAAV,CAAJ;QACAO,OAAO,CAACQ,SAAR,GAAoB,GAApB;QACAR,OAAO,CAACO,MAAR;QAEAP,OAAO,CAACjB,SAAR;QACAiB,OAAO,CAACQ,SAAR,GAAoB,GAApB;QACAL,IAAI,CAACV,SAAS,CAACgB,OAAV,EAAD,CAAJ;QACAT,OAAO,CAACO,MAAR;MACD,CAnBD;MAqBA,MAAK5D,GAAL,GAAW;QACTiC,UAAU,EAAEA,UADH;QAETa,SAAS,EAAEA,SAFF;QAGTO,OAAO,EAAEA,OAHA;QAITtD,QAAQ,EAAEA;MAJD,CAAX;IAMD,CAxMa;;IAEZ,MAAKgE,KAAL,GAAa;MACXC,SAAS,EAAE,KADA;MAEX/C,SAAS,EAAE;IAFA,CAAb;IAIA,MAAKjB,GAAL,GAAW,IAAX;IACA,MAAKmC,KAAL,GAAavD,OAAO,CAACqF,YAAR,CAAqBtF,gBAArB,CAAb;IACA,MAAKqE,MAAL,GAAc/E,KAAK,CAACiG,SAAN,EAAd;IACA,MAAKd,QAAL,GAAgBnF,KAAK,CAACiG,SAAN,EAAhB;IATY;EAUb;;;;wCAEmB;MAAA;;MAClB/F,KAAK,CACFgG,GADH,CACOpF,aADP,EAEGqF,IAFH,CAEQ,UAAAC,GAAG,EAAI;QAAA,IACH/E,IADG,GACM+E,GADN,CACH/E,IADG;QAEX,IAAMoD,IAAI,GAAGrE,OAAO,CAACiB,IAAD,EAAOA,IAAI,CAACgF,OAAL,CAAaC,SAApB,CAAP,CAAsCC,QAAnD;;QACA,MAAI,CAAC/B,WAAL,CAAiBC,IAAjB;MACD,CANH,EAOG+B,KAPH,CAOS,UAAAC,CAAC,EAAI;QACVC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,CAAC,CAACG,OAAxC;MACD,CATH;IAUD;;;uCAEkBC,S,EAAWC,S,EAAWC,Q,EAAU;MAAA;;MACjD,IAAIF,SAAS,CAACG,OAAV,KAAsB,KAAKpF,KAAL,CAAWoF,OAArC,EAA8C;QAAA,4BAOxC,KAAKpF,KAAL,CAAWC,YAP6B;QAAA,IAE1CoF,QAF0C,yBAE1CA,QAF0C;QAAA,IAG1CC,SAH0C,yBAG1CA,SAH0C;QAAA,IAI1CC,SAJ0C,yBAI1CA,SAJ0C;QAAA,IAK1CC,QAL0C,yBAK1CA,QAL0C;QAAA,IAM1CzF,QAN0C,yBAM1CA,QAN0C;QAQ5C,IAAM0F,OAAO,GAAG1F,QAAQ,GAAG,EAA3B;QAEA,KAAKoB,QAAL,CAAc;UACZgD,SAAS,EAAE;QADC,CAAd;QAIA,IAAMuB,IAAI,GAAG,KAAK1F,KAAL,CAAWoF,OAAX,CAAmBjF,GAAnB,CAAuB,UAAAuB,GAAG,EAAI;UAAA,IACjCiE,KADiC,GACvBjE,GADuB,CACjCiE,KADiC;UAEzC,IAAMC,GAAG,kBAAWzG,sBAAX,cAAqCwG,KAArC,cAA8CN,QAA9C,cAA0DC,SAA1D,cAAuEC,SAAvE,cAAoFE,OAApF,sBAAuGrG,WAAvG,CAAT;UAEA,OAAOd,KAAK,CAACgG,GAAN,CAAUsB,GAAV,CAAP;QACD,CALY,CAAb;QAOAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EACGnB,IADH,CACQ,UAAAC,GAAG,EAAI;UACX,IAAMuB,GAAG,GAAGvB,GAAG,CAACrE,GAAJ,CAAQ,UAAAuB,GAAG;YAAA,OAAIA,GAAG,CAACjC,IAAR;UAAA,CAAX,CAAZ;;UACA,MAAI,CAAC0B,QAAL,CAAc;YACZgD,SAAS,EAAE,KADC;YAEZ/C,SAAS,EAAE;UAFC,CAAd;;UAKA,IAAI,CAAC8D,SAAS,CAAC9D,SAAf,EAA0B;YACxB,MAAI,CAAC5B,KAAL,CAAWuG,GAAX;UACD,CAFD,MAEO;YACL,IAAM1E,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,MAAhC,EAAwC,CAAxC,CAAd;YACAF,KAAK,CAACG,SAAN,GACE,gFADF;UAED;QACF,CAfH,EAgBGoD,KAhBH,CAgBS,UAAAC,CAAC,EAAI;UACVC,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,CAAC,CAACG,OAArD;QACD,CAlBH;MAmBD;IACF;;;6BAmEQ;MAAA,IACCb,SADD,GACe,KAAKD,KADpB,CACCC,SADD;MAEP,oBACE;QAAK,SAAS,EAAC,SAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACGA,SAAS,gBACR;QAAK,SAAS,EAAC,SAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,IAAD;QAAM,GAAG,EAAC,YAAV;QAAuB,IAAI,EAAC,OAA5B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CADQ,GAIN,IALN,eAME;QAAQ,SAAS,EAAC,KAAlB;QAAwB,GAAG,EAAE,KAAKhB,MAAlC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EANF,eAOE;QAAQ,SAAS,EAAC,OAAlB;QAA0B,GAAG,EAAE,KAAKI,QAApC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAPF,eAQE;QAAK,SAAS,EAAC,MAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EARF,CADF;IAYD;;;;EArJoBlF,S;;AA4MvB,eAAekB,QAAf"},"metadata":{},"sourceType":"module"}